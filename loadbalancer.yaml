---
apiVersion: v1
kind: Service
metadata:
  name: demo-server-svc
  namespace: demo-20210924
  annotations:
    ## 공통 설정
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: instance
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    ## 내외부 설정
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing  ## Public network
    # service.beta.kubernetes.io/aws-load-balancer-scheme: internal  ## Private network
    ## 타겟그룹에 대한 속성 설정
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: "deregistration_delay.timeout_seconds=30, deregistration_delay.connection_termination.enabled=true" # supported values ["deregistration_delay.timeout_seconds=10, stickiness.enabled=true,stickiness.type=source_ip, proxy_protocol_v2.enabled=true, deregistration_delay.connection_termination.enabled=true, preserve_client_ip.enabled=true", stickiness.enabled=true,stickiness.type=source_ip]
spec:
  ports:
    - port: 80
      name: tcp-80
      targetPort: 80
      protocol: TCP #supported values: [UDP, TCP, TCP_UDP, HTTP, HTTPS]
  type: LoadBalancer
  selector:
    app: demo-server
...
